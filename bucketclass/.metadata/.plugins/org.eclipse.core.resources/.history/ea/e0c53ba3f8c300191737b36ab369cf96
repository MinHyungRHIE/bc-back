package com.pap.bucketclass.service;

import java.util.stream.Collectors;
import java.util.stream.Stream;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.pap.bucketclass.entity.Member;
import com.pap.bucketclass.entity.Role;
import com.pap.bucketclass.model.SignUpModel;
import com.pap.bucketclass.repository.MemberRepository;
import com.pap.bucketclass.repository.RoleRepository;

@Service
public class SignUpService {

	@Autowired
	private MemberRepository memberRepo;

	@Autowired
	private RoleRepository roleRepo;

	// ID중복검사
	public Member checkId(String memberId, SignUpModel signup) {
		System.out.println(">>>ID중복검사실시");
		if(memberRepo.findById(memberId).equals(signup.getMemberId())) {
			System.out.println("이미 존재하는 ID");
			return null;
		}
		return insertMember(signup);
	}

	// Email 중복검사
	public Member checkEmail(String memberEmail, SignUpModel signup) {

		System.out.println(">>>Email중복검사실시");
		if(memberRepo.findByMemberEmail(memberEmail).equals(signup.getMemberEmail())) {
			System.out.println("이미 존재하는 Email");
			return null;
		}
		return insertMember(signup);
	}
	// NickName 중복검사
	public Member checkNickname(String memberNickname, SignUpModel signup) {
		
		System.out.println(">>>Nickname중복검사");
		if(memberRepo.findByMemberNickname(memberNickname).equals(signup.getMemberNickname())){
			System.out.println("이미 존재하는 NickName");
			return null;
		}
		return insertMember(signup);
	}

	@Transactional
	public Member insertMember(SignUpModel signup) {
		Member member = signup.toMember();
		Role role = roleRepo.findByRoleName(signup.getRoleName());
		member.setRoles(Stream.of(role).collect(Collectors.toSet()));
		member.setMemberIsActive(true);
		return memberRepo.save(member);
	}
}
